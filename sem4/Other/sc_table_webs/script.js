const scheduleTable = document.getElementById("schedule");
const categoriesDiv = document.getElementById("categories");

// –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
const daysOfWeek = ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫", "–°—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä–≥", "–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞", "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"];
let categories = JSON.parse(localStorage.getItem("categories")) || {
    work: { name: "üíº –†–∞–±–æ—Ç–∞", color: "#FFD700" },
    study: { name: "üìö –£—á—ë–±–∞", color: "#87CEFA" },
    sport: { name: "üèãÔ∏è –°–ø–æ—Ä—Ç", color: "#90EE90" },
    rest: { name: "üéÆ –û—Ç–¥—ã—Ö", color: "#FFB6C1" }
};

// –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
function loadEvents() {
    const events = JSON.parse(localStorage.getItem("schedule")) || {};
    scheduleTable.innerHTML = "";
    
    for (let i = 0; i < 6; i++) {  // 6 —Å—Ç—Ä–æ–∫ (–ø—Ä–∏–º–µ—Ä)
        const row = document.createElement("tr");

        daysOfWeek.forEach(day => {
            const cell = document.createElement("td");
            cell.dataset.day = day;
            cell.classList.add("schedule-cell");

            if (events[day] && events[day][i]) {
                cell.innerHTML = `<b>${events[day][i].time}</b><br>${events[day][i].title}`;
                cell.style.background = categories[events[day][i].category]?.color || "#ddd";
            }

            cell.onclick = () => editEvent(day, i);
            row.appendChild(cell);
        });

        scheduleTable.appendChild(row);
    }

    renderCategories();
}

// –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–Ω—è—Ç–∏–µ
function editEvent(day, index) {
    let time = prompt("–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –∑–∞–Ω—è—Ç–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, 14:30):");
    if (!time) return;

    let title = prompt(`–í–≤–µ–¥–∏—Ç–µ –∑–∞–Ω—è—Ç–∏–µ (${day}, ${time}):`);
    if (!title) return;

    let category;
    while (true) {
        category = prompt("–í–≤–µ–¥–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é (–∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ—é):", "study");
        if (categories[category] || Object.values(categories).some(c => c.name === category)) break;
        alert("–ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞! –î–æ–±–∞–≤—å—Ç–µ –µ—ë –≤—Ä—É—á–Ω—É—é.");
    }

    const events = JSON.parse(localStorage.getItem("schedule")) || {};
    if (!events[day]) events[day] = {};
    events[day][index] = { time, title, category };

    localStorage.setItem("schedule", JSON.stringify(events));
    loadEvents();
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
function addCustomCategory() {
    const name = prompt("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'üöÄ –ü—Ä–æ–µ–∫—Ç'):");
    if (!name) return;

    const color = prompt("–í–≤–µ–¥–∏—Ç–µ —Ü–≤–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, #FF5733):");
    if (!color) return;

    const id = "custom_" + Object.keys(categories).length;
    categories[id] = { name, color };
    localStorage.setItem("categories", JSON.stringify(categories));
    loadEvents();
}

// –†–∏—Å—É–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
function renderCategories() {
    categoriesDiv.innerHTML = "";
    Object.entries(categories).forEach(([id, category]) => {
        const span = document.createElement("span");
        span.classList.add("category-box");
        span.style.background = category.color;
        span.dataset.category = id;
        span.textContent = category.name;
        categoriesDiv.appendChild(span);
    });

    const addBtn = document.createElement("span");
    addBtn.classList.add("add-category");
    addBtn.textContent = "‚ûï –î–æ–±–∞–≤–∏—Ç—å";
    addBtn.onclick = addCustomCategory;
    categoriesDiv.appendChild(addBtn);
}

// –û—á–∏—Å—Ç–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
function clearSchedule() {
    if (confirm("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –∑–∞–Ω—è—Ç–∏—è?")) {
        localStorage.removeItem("schedule");
        loadEvents();
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç –≤ PDF
function exportToPDF() {
    const { jsPDF } = window.jspdf;
    const doc = new jsPDF({ orientation: "landscape" });
    doc.text("–ú–æ—ë —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ", 10, 10);

    let y = 20;
    const events = JSON.parse(localStorage.getItem("schedule")) || {};
    daysOfWeek.forEach(day => {
        let line = `${day}: `;
        for (let i = 0; i < 6; i++) {
            if (events[day] && events[day][i]) {
                line += `[${events[day][i].time}] ${events[day][i].title} (${events[day][i].category}) `;
            }
        }
        doc.text(line, 10, y);
        y += 10;
    });

    doc.save("—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.pdf");
}

window.onload = loadEvents;
